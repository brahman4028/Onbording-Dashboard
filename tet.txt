<?php

include 'db.php';


if ($_SERVER['REQUEST_METHOD'] === 'POST') {
    // Helper function to sanitize input
    function clean($data) {
        return htmlspecialchars(strip_tags(trim($data)));
    }

    // Text fields
    $entity = clean($_POST['entity']);
    $doi = clean($_POST['oi']);
    $nob = clean($_POST['nob']);
    $businesscategory = clean($_POST['businesscategory']);
    $businesssubcategory = clean($_POST['businesssubcategory']);
    $gstin = clean($_POST['gstin']);
    $pan = clean($_POST['pan']);
    $registeredbsuiness = clean($_POST['registeredbsuiness']);
    $operatingaddress = clean($_POST['operatingaddress']);
    $url = clean($_POST['url']);
    $businessnumber = clean($_POST['businessnumber']);
    $alternnumber = clean($_POST['alternnumber']);
    $supportemail = clean($_POST['supportemail']);

    $fullname = clean($_POST['fullname']);
    $designation = clean($_POST['designation']);
    $number = clean($_POST['number']);
    $personalemail = clean($_POST['personalemail']);
    $aadhaarnumber = clean($_POST['aadhaarnumber']);
    $pannumber = clean($_POST['pannumber']);

    $fullnameadn = clean($_POST['fullnameadn']);
    $designationadn = clean($_POST['designationadn']);
    $numberadn = clean($_POST['numberadn']);
    $personalemailadn = clean($_POST['personalemailadn']);
    $aadhaarnumberadn = clean($_POST['aadhaarnumberadn']);
    $pannumberadn = clean($_POST['pannumberadn']);

    $totalvolume = clean($_POST['totalvolume']);
    $numberofusers = clean($_POST['numberofusers']);
    $sixmonthprojectionamount = clean($_POST['sixmonthprojectionamount']);
    $sixmonthprojectionuser = clean($_POST['sixmonthprojectionuser']);
    $numoftransactions = clean($_POST['numoftransactions']);
    $disbursedamount = clean($_POST['disbursedamount']);
    $mintransaction = clean($_POST['mintransaction']);
    $maxtransaction = clean($_POST['maxtransaction']);
    $thresholdlimit = clean($_POST['thresholdlimit']);

    // File Uploads
    $uploadDir = 'uploads/';
    $uploadedFiles = [];
    $fileFields = [
        'aadhaarfile', 'personalpanfile', 'photograph', 'addressfile', 'coifile', 'moafile',
        'aoafile', 'brfile', 'udyamfile', 'gstinfile', 'bofile', 'rentfile', 'annexurebfile'
    ];

    foreach ($fileFields as $field) {
        if (isset($_FILES[$field]) && $_FILES[$field]['error'] === UPLOAD_ERR_OK) {
            $filename = basename($_FILES[$field]['name']);
            $targetPath = $uploadDir . uniqid() . "_" . $filename;
            if (move_uploaded_file($_FILES[$field]['tmp_name'], $targetPath)) {
                $uploadedFiles[$field] = $targetPath;
            } else {
                $uploadedFiles[$field] = 'Upload failed';
            }
        } else {
            $uploadedFiles[$field] = 'No file or error';
        }
    }

    // Example output (you can replace this with DB insert logic)
    echo "<h3>Form Submitted Successfully</h3><pre>";
    print_r([
        'entity' => $entity,
        'doi' => $doi,
        'nob' => $nob,
        'businesscategory' => $businesscategory,
        'businesssubcategory' => $businesssubcategory,
        'gstin' => $gstin,
        'pan' => $pan,
        'registeredbsuiness' => $registeredbsuiness,
        'operatingaddress' => $operatingaddress,
        'url' => $url,
        'businessnumber' => $businessnumber,
        'alternnumber' => $alternnumber,
        'supportemail' => $supportemail,
        'fullname' => $fullname,
        'designation' => $designation,
        'number' => $number,
        'personalemail' => $personalemail,
        'aadhaarnumber' => $aadhaarnumber,
        'pannumber' => $pannumber,
        'fullnameadn' => $fullnameadn,
        'designationadn' => $designationadn,
        'numberadn' => $numberadn,
        'personalemailadn' => $personalemailadn,
        'aadhaarnumberadn' => $aadhaarnumberadn,
        'pannumberadn' => $pannumberadn,
        'totalvolume' => $totalvolume,
        'numberofusers' => $numberofusers,
        'sixmonthprojectionamount' => $sixmonthprojectionamount,
        'sixmonthprojectionuser' => $sixmonthprojectionuser,
        'numoftransactions' => $numoftransactions,
        'disbursedamount' => $disbursedamount,
        'mintransaction' => $mintransaction,
        'maxtransaction' => $maxtransaction,
        'thresholdlimit' => $thresholdlimit,
        'uploadedFiles' => $uploadedFiles
    ]);
    echo "</pre>";
} else {
    echo "<h4>Invalid request method.</h4>";
}



?>



<input type="text" oninput="document.getElementById('val_gstin').innerText = this.value" placeholder="Enter GSTIN">


<div class="d-flex justify-content-center align-items-center">
                                            <button type="button" class="btn text-center btn-primary mb-4 mt-2" style="box-shadow: 0 0.5rem 1rem rgba(13, 110, 253, 0.3); border-radius:30px;" onclick="downloadKYC()">Download KYC PDF</button>
                                        </div>


   <!-- pdf generator -->
    <!-- <script>
        function downloadKYC() {
            const element = document.getElementById('kycPreview');
            const businessName = document.getElementById('nob').value.trim() || 'KYC';

            // Sanitize filename (remove spaces/special chars)
            const cleanName = businessName.replace(/[^a-zA-Z0-9]/g, '_');


            const opt = {
                margin: 0.8,
                filename: `${cleanName}-KYC-Onboarding.pdf`,
                image: {
                    type: 'jpeg',
                    quality: 0.98
                },
                html2canvas: {
                    scale: 2
                },
                jsPDF: {
                    unit: 'mm',
                    format: 'a4',
                    orientation: 'portrait'
                }
            };

            html2pdf().set(opt).from(element).save();
        }
    </script> -->
    <!-- validateFile -->

    <!-- <script>
        const uploadedFiles = {}; // Global object to track files

        function validateFile(input, msgId, previewId) {
            const file = input.files[0];
            const msg = document.getElementById(msgId);
            const preview = document.getElementById(previewId);
            const inputId = input.id;

            msg.innerText = '';
            preview.innerHTML = '';

            const allowedTypes = ["application/pdf", "image/jpeg", "image/jpg", "image/png", "image/webp"];
            const maxSize = 2 * 1024 * 1024;

            // Validation
            if (!file || !allowedTypes.includes(file.type) || file.size > maxSize) {
                msg.innerText = "❌ Invalid or too large file.";
                msg.style.color = "red";
                input.value = '';
                return;
            }

            // Save file reference
            uploadedFiles[inputId] = file;

            // Show file name
            msg.innerText = "✅ File is valid.";
            msg.style.color = "green";
            preview.innerHTML = `<strong>${file.name}</strong><br>`;

            // Preview logic
            if (file.type === "application/pdf") {
                const iframe = document.createElement("iframe");
                iframe.src = URL.createObjectURL(file);
                iframe.style.width = "100%";
                iframe.style.height = "400px";
                iframe.style.border = "1px solid #ccc";
                preview.appendChild(iframe);
            } else if (file.type.startsWith("image/")) {
                const reader = new FileReader();
                reader.onload = function(e) {
                    const img = document.createElement("img");
                    img.src = e.target.result;
                    img.style.maxWidth = "100%";
                    img.style.border = "1px solid #ccc";
                    img.style.marginTop = "10px";
                    preview.appendChild(img);
                };
                reader.readAsDataURL(file);
            }
        }
    </script> -->

